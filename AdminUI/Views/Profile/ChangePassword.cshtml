@model AdminUI.Models.Profile.ChangePasswordViewModel
@{
    ViewData["Title"] = "Change Password";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="fade-in-up">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="admin-card">
                <div class="card-header">
                    <h4 class="mb-0">
                        <i class="fas fa-key"></i> Change Password
                    </h4>
                </div>
                <div class="card-body">
                    <form asp-action="ChangePassword" method="post">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                        <div class="mb-3">
                            <label asp-for="OldPassword" class="form-label">
                                <i class="fas fa-lock"></i> @Html.DisplayNameFor(m => m.OldPassword)
                            </label>
                            <div class="input-group">
                                <input asp-for="OldPassword" class="form-control" placeholder="Enter current password" />
                                <button class="btn btn-outline-secondary" type="button" id="toggleOldPassword">
                                    <i class="fas fa-eye" id="toggleOldPasswordIcon"></i>
                                </button>
                            </div>
                            <span asp-validation-for="OldPassword" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="NewPassword" class="form-label">
                                <i class="fas fa-lock"></i> @Html.DisplayNameFor(m => m.NewPassword)
                            </label>
                            <div class="input-group">
                                <input asp-for="NewPassword" class="form-control" placeholder="Enter new password" />
                                <button class="btn btn-outline-secondary" type="button" id="toggleNewPassword">
                                    <i class="fas fa-eye" id="toggleNewPasswordIcon"></i>
                                </button>
                            </div>
                            <span asp-validation-for="NewPassword" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="ConfirmNewPassword" class="form-label">
                                <i class="fas fa-lock"></i> @Html.DisplayNameFor(m => m.ConfirmNewPassword)
                            </label>
                            <div class="input-group">
                                <input asp-for="ConfirmNewPassword" class="form-control" placeholder="Confirm new password" />
                                <button class="btn btn-outline-secondary" type="button" id="toggleConfirmPassword">
                                    <i class="fas fa-eye" id="toggleConfirmPasswordIcon"></i>
                                </button>
                            </div>
                            <span asp-validation-for="ConfirmNewPassword" class="text-danger"></span>
                        </div>

                        <div class="d-flex justify-content-between">
                            <button type="submit" class="btn btn-warning">
                                <i class="fas fa-key"></i> Change Password
                            </button>
                            <a asp-action="Index" class="btn btn-secondary">
                                <i class="fas fa-times"></i> Cancel
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Toggle password visibility
        $('#toggleOldPassword').click(function() {
            const passwordField = $('#OldPassword');
            const toggleIcon = $('#toggleOldPasswordIcon');

            if (passwordField.attr('type') === 'password') {
                passwordField.attr('type', 'text');
                toggleIcon.removeClass('fa-eye').addClass('fa-eye-slash');
            } else {
                passwordField.attr('type', 'password');
                toggleIcon.removeClass('fa-eye-slash').addClass('fa-eye');
            }
        });

        $('#toggleNewPassword').click(function() {
            const passwordField = $('#NewPassword');
            const toggleIcon = $('#toggleNewPasswordIcon');

            if (passwordField.attr('type') === 'password') {
                passwordField.attr('type', 'text');
                toggleIcon.removeClass('fa-eye').addClass('fa-eye-slash');
            } else {
                passwordField.attr('type', 'password');
                toggleIcon.removeClass('fa-eye-slash').addClass('fa-eye');
            }
        });

        $('#toggleConfirmPassword').click(function() {
            const passwordField = $('#ConfirmNewPassword');
            const toggleIcon = $('#toggleConfirmPasswordIcon');

            if (passwordField.attr('type') === 'password') {
                passwordField.attr('type', 'text');
                toggleIcon.removeClass('fa-eye').addClass('fa-eye-slash');
            } else {
                passwordField.attr('type', 'password');
                toggleIcon.removeClass('fa-eye-slash').addClass('fa-eye');
            }
        });
    </script>
}