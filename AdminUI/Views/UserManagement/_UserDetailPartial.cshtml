@model AdminUI.Models.User.UserManagementViewModel

@if (Model != null)
{
    <div class="user-detail-container">
        <div class="row">
            <!-- User Avatar and Basic Info -->
            <div class="col-md-4 text-center">
                <div class="user-avatar-large mb-3">
                    <i class="fas fa-user-circle fa-5x text-muted"></i>
                </div>
                <h5 class="fw-bold">@Model.FullName</h5>
                <p class="text-muted">ID: #@Model.UserID</p>

                <!-- Status Badge -->
                <div class="mb-3">
                    @if (Model.IsDeactivated)
                    {
                        <span class="badge bg-danger fs-6">
                            <i class="fas fa-times-circle"></i> Deactivated
                        </span>
                    }
                    else
                    {
                        <span class="badge bg-success fs-6">
                            <i class="fas fa-check-circle"></i> Active
                        </span>
                    }
                </div>

                <!-- Role Badge -->
                <div class="mb-3">
                    @switch (Model.RoleName?.ToLower())
                    {
                        case "admin":
                            <span class="badge bg-danger fs-6">
                                <i class="fas fa-crown"></i> Admin
                            </span>
                            break;
                        case "staff":
                            <span class="badge bg-warning fs-6">
                                <i class="fas fa-user-tie"></i> Staff
                            </span>
                            break;
                        case "user":
                            <span class="badge bg-info fs-6">
                                <i class="fas fa-user"></i> User
                            </span>
                            break;
                        default:
                            <span class="badge bg-secondary fs-6">
                                <i class="fas fa-question"></i> @(Model.RoleName ?? "Unknown")
                            </span>
                            break;
                    }
                </div>
            </div>

            <!-- User Details -->
            <div class="col-md-8">
                <div class="user-details">
                    <h6 class="border-bottom pb-2 mb-3">
                        <i class="fas fa-info-circle text-primary"></i> Personal Information
                    </h6>

                    <div class="row mb-3">
                        <div class="col-sm-4 fw-bold text-muted">
                            <i class="fas fa-envelope text-primary"></i> Email:
                        </div>
                        <div class="col-sm-8">
                            <a href="mailto:@Model.Email" class="text-decoration-none">@Model.Email</a>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-sm-4 fw-bold text-muted">
                            <i class="fas fa-phone text-success"></i> Phone:
                        </div>
                        <div class="col-sm-8">
                            <a href="tel:@Model.PhoneNumber" class="text-decoration-none">@Model.PhoneNumber</a>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-sm-4 fw-bold text-muted">
                            <i class="fas fa-map-marker-alt text-danger"></i> Address:
                        </div>
                        <div class="col-sm-8">
                            @(Model.Address ?? "Not provided")
                        </div>
                    </div>

                    @if (Model.BirthDay.HasValue)
                    {
                        <div class="row mb-3">
                            <div class="col-sm-4 fw-bold text-muted">
                                <i class="fas fa-birthday-cake text-warning"></i> Birth Date:
                            </div>
                            <div class="col-sm-8">
                                @Model.BirthDay.Value.ToString("dd/MM/yyyy")
                                <small class="text-muted">
                                    (Age: @(CalculateAge(Model.BirthDay.Value)) years)
                                </small>
                            </div>
                        </div>
                    }

                    <h6 class="border-bottom pb-2 mb-3 mt-4">
                        <i class="fas fa-clock text-info"></i> Account Information
                    </h6>

                    <div class="row mb-3">
                        <div class="col-sm-4 fw-bold text-muted">
                            <i class="fas fa-calendar-plus text-info"></i> Created:
                        </div>
                        <div class="col-sm-8">
                            @Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")
                            <small class="text-muted">
                                (@(CalculateDaysAgo(Model.CreatedAt)) days ago)
                            </small>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-sm-4 fw-bold text-muted">
                            <i class="fas fa-calendar-check text-warning"></i> Last Updated:
                        </div>
                        <div class="col-sm-8">
                            @Model.UpdatedAt.ToString("dd/MM/yyyy HH:mm")
                            <small class="text-muted">
                                (@(CalculateDaysAgo(Model.UpdatedAt)) days ago)
                            </small>
                        </div>
                    </div>

                </div>
            </div>
        </div>

        <!-- Action Buttons -->
        <div class="row mt-4">
            <div class="col-12">
                <div class="d-flex justify-content-center gap-2">
                    <a href="/UserManagement/Edit/@Model.UserID" class="btn btn-primary btn-sm">
                        <i class="fas fa-edit"></i> Edit User
                    </a>
                    @if (Model.IsDeactivated)
                    {
                        <form action="/UserManagement/Activate/@Model.UserID" method="post" class="d-inline">
                            <button type="submit" class="btn btn-success btn-sm"
                                    onclick="return confirm('Are you sure you want to activate this user?')">
                                <i class="fas fa-check"></i> Activate
                            </button>
                        </form>
                    }
                    else
                    {
                        <form action="/UserManagement/Deactivate/@Model.UserID" method="post" class="d-inline">
                            <button type="submit" class="btn btn-warning btn-sm"
                                    onclick="return confirm('Are you sure you want to deactivate this user?')">
                                <i class="fas fa-ban"></i> Deactivate
                            </button>
                        </form>
                    }
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="alert alert-danger">
        <i class="fas fa-exclamation-triangle"></i>
        User not found or you don't have permission to view this user.
    </div>
}

@functions {
    int CalculateAge(DateTime birthDate)
    {
        var today = DateTime.Today;
        var age = today.Year - birthDate.Year;
        if (birthDate.Date > today.AddYears(-age)) age--;
        return age;
    }

    int CalculateDaysAgo(DateTime date)
    {
        return (DateTime.Now - date).Days;
    }
}

<style>
    .user-detail-container {
        padding: 1.5rem;
    }

    .user-avatar-large {
        margin-bottom: 1rem;
    }

    .user-details .row {
        align-items: center;
    }

    .text-purple {
        color: #6f42c1 !important;
    }

    .fs-6 {
        font-size: 1rem !important;
    }

    .fw-bold.text-muted {
        color: #6c757d !important;
        font-weight: 600 !important;
    }

    .user-details h6 {
        color: #495057;
        font-weight: 600;
    }

    .gap-2 {
        gap: 0.5rem !important;
    }

    .btn-sm {
        padding: 0.375rem 0.75rem;
        font-size: 0.875rem;
    }

    .badge.bg-light {
        color: #495057 !important;
        border: 1px solid #dee2e6;
    }

    /* Admin layout compatibility */
    .modal-body .user-detail-container {
        background: white;
        border-radius: 0.375rem;
    }

    .user-details .col-sm-4 {
        padding-bottom: 0.25rem;
    }

    .user-details .col-sm-8 {
        padding-bottom: 0.25rem;
    }

    /* Icon colors consistency with admin theme */
    .text-primary {
        color: #0d6efd !important;
    }

    .text-success {
        color: #198754 !important;
    }

    .text-danger {
        color: #dc3545 !important;
    }

    .text-warning {
        color: #ffc107 !important;
    }

    .text-info {
        color: #0dcaf0 !important;
    }
</style>