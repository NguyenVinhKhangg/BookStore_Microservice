@model AdminUI.Models.Stock.StockTransactionViewModel
@{
    ViewData["Title"] = "Transaction Details";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var isAdmin = ViewBag.IsAdmin as bool? ?? false;
}

<div class="fade-in-up">
    <div class="admin-card">
        <div class="card-header">
            <h4 class="mb-0">
                <i class="fas fa-receipt"></i> Transaction Details #@Model.TransactionID
            </h4>
        </div>
        <div class="card-body">
            <div class="row">
                <!-- Transaction Info -->
                <div class="col-md-6">
                    <div class="info-section">
                        <h6 class="border-bottom pb-2 mb-3">
                            <i class="fas fa-info-circle"></i> Transaction Information
                        </h6>
                        
                        <div class="row mb-2">
                            <div class="col-sm-4 fw-bold">Transaction ID:</div>
                            <div class="col-sm-8">#@Model.TransactionID</div>
                        </div>
                        
                        <div class="row mb-2">
                            <div class="col-sm-4 fw-bold">Type:</div>
                            <div class="col-sm-8">
                                @switch (Model.TransactionType)
                                {
                                    case "StockIn":
                                        <span class="badge bg-success">
                                            <i class="fas fa-arrow-down"></i> Stock In
                                        </span>
                                        break;
                                    case "StockOut":
                                        <span class="badge bg-warning">
                                            <i class="fas fa-arrow-up"></i> Stock Out
                                        </span>
                                        break;
                                    case "Adjustment":
                                        <span class="badge bg-info">
                                            <i class="fas fa-adjust"></i> Adjustment
                                        </span>
                                        break;
                                    default:
                                        <span class="badge bg-secondary">@Model.TransactionType</span>
                                        break;
                                }
                            </div>
                        </div>
                        
                        <div class="row mb-2">
                            <div class="col-sm-4 fw-bold">Status:</div>
                            <div class="col-sm-8">
                                @switch (Model.Status)
                                {
                                    case "Pending":
                                        <span class="badge bg-warning">
                                            <i class="fas fa-clock"></i> Pending
                                        </span>
                                        break;
                                    case "Approved":
                                        <span class="badge bg-success">
                                            <i class="fas fa-check"></i> Approved
                                        </span>
                                        break;
                                    case "Rejected":
                                        <span class="badge bg-danger">
                                            <i class="fas fa-times"></i> Rejected
                                        </span>
                                        break;
                                    default:
                                        <span class="badge bg-secondary">@Model.Status</span>
                                        break;
                                }
                            </div>
                        </div>
                        
                        <div class="row mb-2">
                            <div class="col-sm-4 fw-bold">Created Date:</div>
                            <div class="col-sm-8">@Model.TransactionDate.ToString("dd/MM/yyyy HH:mm")</div>
                        </div>
                        
                        <div class="row mb-2">
                            <div class="col-sm-4 fw-bold">Created By:</div>
                            <div class="col-sm-8">
                                @if (!string.IsNullOrEmpty(Model.CreatorName))
                                {
                                    @Model.CreatorName
                                }
                                else
                                {
                                    <span class="text-muted">User #@Model.CreatedBy</span>
                                }
                            </div>
                        </div>
                        
                        @if (Model.ApprovedBy.HasValue)
                        {
                            <div class="row mb-2">
                                <div class="col-sm-4 fw-bold">Approved By:</div>
                                <div class="col-sm-8">
                                    @if (!string.IsNullOrEmpty(Model.ApproverName))
                                    {
                                        @Model.ApproverName
                                    }
                                    else
                                    {
                                        <span class="text-muted">User #@Model.ApprovedBy</span>
                                    }
                                </div>
                            </div>
                            
                            <div class="row mb-2">
                                <div class="col-sm-4 fw-bold">Approved Date:</div>
                                <div class="col-sm-8">@Model.ApprovedAt?.ToString("dd/MM/yyyy HH:mm")</div>
                            </div>
                        }
                        
                        @if (!string.IsNullOrEmpty(Model.Note))
                        {
                            <div class="row mb-2">
                                <div class="col-sm-4 fw-bold">Note:</div>
                                <div class="col-sm-8">@Model.Note</div>
                            </div>
                        }
                    </div>
                </div>
                
                <!-- Summary -->
                <div class="col-md-6">
                    <div class="summary-section">
                        <h6 class="border-bottom pb-2 mb-3">
                            <i class="fas fa-chart-bar"></i> Summary
                        </h6>
                        
                        <div class="card bg-light">
                            <div class="card-body">
                                <div class="row text-center">
                                    <div class="col-6">
                                        <div class="summary-item">
                                            <i class="fas fa-boxes fa-2x text-primary mb-2"></i>
                                            <h4>@Model.TotalItems</h4>
                                            <small class="text-muted">Total Items</small>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="summary-item">
                                            <i class="fas fa-dollar-sign fa-2x text-success mb-2"></i>
                                            <h4>$@Model.TotalAmount.ToString("N2")</h4>
                                            <small class="text-muted">Total Amount</small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        @if (isAdmin && Model.Status == "Pending")
                        {
                            <div class="mt-3">
                                <h6 class="mb-3">
                                    <i class="fas fa-cogs"></i> Admin Actions
                                </h6>
                                <div class="d-grid gap-2">
                                    <button type="button" class="btn btn-success" 
                                            onclick="updateStatus(@Model.TransactionID, 'Approved')">
                                        <i class="fas fa-check"></i> Approve Transaction
                                    </button>
                                    <button type="button" class="btn btn-danger" 
                                            onclick="updateStatus(@Model.TransactionID, 'Rejected')">
                                        <i class="fas fa-times"></i> Reject Transaction
                                    </button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
            
            <!-- Transaction Details -->
            <div class="mt-4">
                <h6 class="border-bottom pb-2 mb-3">
                    <i class="fas fa-list"></i> Items Details
                </h6>
                
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Book</th>
                                <th>Quantity</th>
                                <th>Unit Price</th>
                                <th>Total</th>
                                <th>Note</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var detail in Model.Details)
                            {
                                <tr>
                                    <td>
                                        <div>
                                            <strong>@detail.BookTitle</strong>
                                            @if (!string.IsNullOrEmpty(detail.BookCode))
                                            {
                                                <br><small class="text-muted">Code: @detail.BookCode</small>
                                            }
                                        </div>
                                    </td>
                                    <td>
                                        <span class="badge bg-primary">@detail.Quantity</span>
                                    </td>
                                    <td>
                                        <strong>$@detail.UnitPrice.ToString("N2")</strong>
                                    </td>
                                    <td>
                                        <strong class="text-success">$@detail.Total.ToString("N2")</strong>
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(detail.Note))
                                        {
                                            <small>@detail.Note</small>
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                        <tfoot>
                            <tr class="table-dark">
                                <th>Total</th>
                                <th><span class="badge bg-light text-dark">@Model.TotalItems items</span></th>
                                <th></th>
                                <th><strong>$@Model.TotalAmount.ToString("N2")</strong></th>
                                <th></th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
            
            <div class="d-flex justify-content-between mt-4">
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> Back to List
                </a>
                @if (isAdmin && Model.Status == "Pending")
                {
                    <form asp-action="Delete" asp-route-id="@Model.TransactionID" method="post" class="d-inline">
                        <button type="submit" class="btn btn-outline-danger" 
                                data-confirm="Are you sure you want to delete this transaction? This action cannot be undone.">
                            <i class="fas fa-trash"></i> Delete Transaction
                        </button>
                    </form>
                }
            </div>
        </div>
    </div>
</div>

<!-- Status Update Modal -->
<div class="modal fade" id="statusUpdateModal" tabindex="-1" aria-labelledby="statusUpdateModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="statusUpdateModalLabel">Update Transaction Status</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="UpdateStatus" method="post">
                <input type="hidden" name="id" value="@Model.TransactionID" />
                <div class="modal-body">
                    <input type="hidden" id="statusValue" name="Status" />
                    
                    <div class="mb-3">
                        <label for="statusNote" class="form-label">Note (Optional)</label>
                        <textarea class="form-control" id="statusNote" name="Note" rows="3" 
                                  placeholder="Add a note for this status change..."></textarea>
                    </div>
                    
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle"></i>
                        <span id="statusMessage"></span>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn" id="confirmStatusButton">Confirm</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updateStatus(transactionId, status) {
            document.getElementById('statusValue').value = status;
            document.getElementById('statusNote').value = '';
            
            const statusMessage = document.getElementById('statusMessage');
            const confirmButton = document.getElementById('confirmStatusButton');
            
            if (status === 'Approved') {
                statusMessage.textContent = 'This transaction will be approved and stock levels will be updated automatically.';
                confirmButton.className = 'btn btn-success';
                confirmButton.innerHTML = '<i class="fas fa-check"></i> Approve Transaction';
            } else if (status === 'Rejected') {
                statusMessage.textContent = 'This transaction will be rejected and no stock changes will be made.';
                confirmButton.className = 'btn btn-danger';
                confirmButton.innerHTML = '<i class="fas fa-times"></i> Reject Transaction';
            }
            
            new bootstrap.Modal(document.getElementById('statusUpdateModal')).show();
        }

        // Confirmation dialogs for delete
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('[data-confirm]').forEach(function(element) {
                element.addEventListener('click', function(e) {
                    if (!confirm(this.getAttribute('data-confirm'))) {
                        e.preventDefault();
                    }
                });
            });
        });
    </script>
}