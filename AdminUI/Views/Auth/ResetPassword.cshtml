@model AdminUI.Models.Authentication.ResetPasswordViewModel
@{
    ViewData["Title"] = "Reset Password";
    Layout = "~/Views/Shared/_AuthLayout.cshtml";
}

<div class="login-container">
    <div class="card login-card">
        <div class="card-header text-center">
            <h3 class="mb-0">
                <i class="fas fa-lock"></i> Reset Password
            </h3>
        </div>
        <div class="card-body">
            <p class="text-muted text-center mb-4">
                Enter the OTP sent to your email and set a new password.
            </p>
            
            <form asp-action="ResetPassword" asp-controller="Auth" method="post" id="resetPasswordForm">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                
                <div class="form-group mb-3">
                    <label asp-for="Email" class="form-label">
                        <i class="fas fa-envelope"></i> Email
                    </label>
                    <input asp-for="Email" class="form-control" readonly />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="OTP" class="form-label">
                        <i class="fas fa-shield-alt"></i> @Html.DisplayNameFor(m => m.OTP)
                    </label>
                    <input asp-for="OTP" class="form-control" placeholder="Enter OTP code" maxlength="6" />
                    <span asp-validation-for="OTP" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="NewPassword" class="form-label">
                        <i class="fas fa-lock"></i> @Html.DisplayNameFor(m => m.NewPassword)
                    </label>
                    <div class="input-group">
                        <input asp-for="NewPassword" class="form-control" placeholder="Enter new password" />
                        <button class="btn btn-outline-secondary" type="button" id="toggleNewPassword">
                            <i class="fas fa-eye" id="toggleNewPasswordIcon"></i>
                        </button>
                    </div>
                    <span asp-validation-for="NewPassword" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="ConfirmNewPassword" class="form-label">
                        <i class="fas fa-lock"></i> @Html.DisplayNameFor(m => m.ConfirmNewPassword)
                    </label>
                    <div class="input-group">
                        <input asp-for="ConfirmNewPassword" class="form-control" placeholder="Confirm new password" />
                        <button class="btn btn-outline-secondary" type="button" id="toggleConfirmPassword">
                            <i class="fas fa-eye" id="toggleConfirmPasswordIcon"></i>
                        </button>
                    </div>
                    <span asp-validation-for="ConfirmNewPassword" class="text-danger"></span>
                </div>

                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-primary btn-lg" id="resetPasswordBtn">
                        <i class="fas fa-check"></i> Reset Password
                        <span class="spinner-border spinner-border-sm d-none" id="resetPasswordSpinner"></span>
                    </button>
                </div>
            </form>
        </div>
        <div class="card-footer text-center">
            <a asp-action="ForgotPassword" asp-controller="Auth" class="text-decoration-none">
                <i class="fas fa-arrow-left"></i> Back to Forgot Password
            </a>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function() {
            // Toggle password visibility
            $('#toggleNewPassword').click(function() {
                const passwordField = $('#NewPassword');
                const toggleIcon = $('#toggleNewPasswordIcon');
                
                if (passwordField.attr('type') === 'password') {
                    passwordField.attr('type', 'text');
                    toggleIcon.removeClass('fa-eye').addClass('fa-eye-slash');
                } else {
                    passwordField.attr('type', 'password');
                    toggleIcon.removeClass('fa-eye-slash').addClass('fa-eye');
                }
            });

            $('#toggleConfirmPassword').click(function() {
                const passwordField = $('#ConfirmNewPassword');
                const toggleIcon = $('#toggleConfirmPasswordIcon');
                
                if (passwordField.attr('type') === 'password') {
                    passwordField.attr('type', 'text');
                    toggleIcon.removeClass('fa-eye').addClass('fa-eye-slash');
                } else {
                    passwordField.attr('type', 'password');
                    toggleIcon.removeClass('fa-eye-slash').addClass('fa-eye');
                }
            });

            // Form submission
            $('#resetPasswordForm').on('submit', function(e) {
                const resetPasswordBtn = $('#resetPasswordBtn');
                const resetPasswordSpinner = $('#resetPasswordSpinner');
                
                resetPasswordBtn.prop('disabled', true);
                resetPasswordSpinner.removeClass('d-none');
                
                setTimeout(function() {
                    if (!$('.text-danger:visible').length) {
                        resetPasswordBtn.prop('disabled', false);
                        resetPasswordSpinner.addClass('d-none');
                    }
                }, 3000);
            });
        });
    </script>
}